# Generated by Django 5.0.6 on 2025-10-06 08:35

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('utils', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='LeaveRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('leave_type', models.CharField(choices=[('sick', 'Sick Leave'), ('emergency', 'Emergency Leave'), ('personal', 'Personal Leave'), ('unpaid', 'Unpaid Leave')], max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('reason', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('approved_by', models.CharField(blank=True, max_length=100)),
                ('approved_date', models.DateTimeField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leave_requests', to='utils.teacher')),
            ],
            options={
                'verbose_name': 'Leave Request',
                'verbose_name_plural': 'Leave Requests',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('status', models.CharField(choices=[('present', 'Present'), ('absent', 'Absent'), ('half_day', 'Half Day'), ('sunday', 'Sunday (Weekly Off)')], max_length=20)),
                ('remarks', models.TextField(blank=True, help_text='Reason for absence or any notes')),
                ('marked_by', models.CharField(blank=True, max_length=100)),
                ('marked_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='utils.teacher')),
            ],
            options={
                'verbose_name': 'Attendance',
                'verbose_name_plural': 'Attendance Records',
                'ordering': ['-date'],
                'indexes': [models.Index(fields=['teacher', 'date'], name='utils_atten_teacher_a31fef_idx'), models.Index(fields=['date'], name='utils_atten_date_ea20a3_idx')],
                'unique_together': {('teacher', 'date')},
            },
        ),
        migrations.CreateModel(
            name='MonthlySalary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('year', models.IntegerField(validators=[django.core.validators.MinValueValidator(2020)])),
                ('basic_salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('accommodation_allowance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('transportation_allowance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('gross_salary', models.DecimalField(decimal_places=2, editable=False, max_digits=10)),
                ('total_working_days', models.IntegerField(default=0)),
                ('days_present', models.IntegerField(default=0)),
                ('days_absent', models.IntegerField(default=0)),
                ('half_days', models.IntegerField(default=0)),
                ('bonus', models.DecimalField(decimal_places=2, default=0, help_text='Performance bonus or incentives', max_digits=10)),
                ('overtime_pay', models.DecimalField(decimal_places=2, default=0, help_text='Overtime payment', max_digits=10)),
                ('other_additions', models.DecimalField(decimal_places=2, default=0, help_text='Any other additions', max_digits=10)),
                ('other_additions_remarks', models.CharField(blank=True, help_text='Remarks for other additions', max_length=200)),
                ('total_additions', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10)),
                ('absence_deduction', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('other_deductions', models.DecimalField(decimal_places=2, default=0, help_text='Any other deductions', max_digits=10)),
                ('other_deductions_remarks', models.CharField(blank=True, help_text='Remarks for other deductions', max_length=200)),
                ('total_deductions', models.DecimalField(decimal_places=2, editable=False, max_digits=10)),
                ('net_salary', models.DecimalField(decimal_places=2, editable=False, max_digits=10)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('processed', 'Processed'), ('paid', 'Paid'), ('hold', 'On Hold')], default='pending', max_length=20)),
                ('payment_date', models.DateField(blank=True, null=True)),
                ('payment_method', models.CharField(blank=True, help_text='e.g., Bank Transfer, Cash, Cheque', max_length=50)),
                ('payment_reference', models.CharField(blank=True, max_length=100)),
                ('remarks', models.TextField(blank=True)),
                ('calculated_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monthly_salaries', to='utils.teacher')),
            ],
            options={
                'verbose_name': 'Monthly Salary',
                'verbose_name_plural': 'Monthly Salaries',
                'ordering': ['-year', '-month'],
                'indexes': [models.Index(fields=['teacher', 'month', 'year'], name='utils_month_teacher_1de4a1_idx'), models.Index(fields=['payment_status'], name='utils_month_payment_7bad9e_idx')],
                'unique_together': {('teacher', 'month', 'year')},
            },
        ),
    ]
